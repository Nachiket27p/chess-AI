#ifndef THEME_H
#define THEME_H

#include <QString>

class Theme
{
private:
    int darkBackgroundRGB[3];  // RGB color for dark tiles
    int lightBackgroundRGB[3]; // RGB color for light tiles
    int hoverWhitePieceRGB[3]; // RGB color for hovering over white pieces
    int hoverBlackPieceRGB[3]; // RGB color for hovering over black pieces
    int hoverBackgroundRGB[3]; // RGB color for hovering over unoccupied tiles
    int attackRGB[3];          // RGB color for when a piece can attack another

    /**
      * @brief Constructs a a style string using the rgb colors defines in the private
     * privae variables; darkBackgroundRGB, lightBackgroundRGB, ...
     * 
     * @param rgb An array of three elementes representing RGB color code.
     * @return QString The style string
     */
    static QString themeStyleString(int rgb[3]);

public:
    // Enum to represent the themes which can be selected.
    enum themes
    {
        def,
        wood
    };

    /**
     * @brief Set the Theme for the chess board. Only the board changes the pieces
     * do not change.
     * 
     * @param selection 
     */
    void setTheme(themes selection);

    /**
     * @brief Get the dark background style string by returning the string generated by
     * the private themeStyleString(int[3]) function.
     * 
     * @return QString Style string
     */
    QString getDarkBackground() { return themeStyleString(darkBackgroundRGB); }

    /**
     * @brief Get the light background style string by returning the string generated by
     * the private themeStyleString(int[3]) function.
     * 
     * @return QString Style string
     */
    QString getLightBackground() { return themeStyleString(lightBackgroundRGB); }

    /**
     * @brief Get the hover style string for white by returning the string generated by
     * the private themeStyleString(int[3]) function.
     * 
     * @return QString Style string
     */
    QString getHoverColorWhite() { return themeStyleString(hoverWhitePieceRGB); }

    /**
     * @brief Get the hover style string for black by returning the string generated by
     * the private themeStyleString(int[3]) function.
     * 
     * @return QString Style string
     */
    QString getHoverColorBlack() { return themeStyleString(hoverBlackPieceRGB); }

    /**
     * @brief Get the hover style string for unoccupied spots on the board by returning
     * the string generated by the private themeStyleString(int[3]) function.
     * 
     * @return QString Style string
     */
    QString getHoverBackground() { return themeStyleString(hoverBackgroundRGB); }

    /**
     * @brief Get the Dark Background style string by returning the string generated by
     * the private themeStyleString(int[3]) function.
     * 
     * @return QString Style string
     */
    QString getAttackBackground() { return themeStyleString(attackRGB); }
};

#endif // THEME_H
